{"version":3,"sources":["logo.svg","components/ParentBox.js","components/HeaderText.js","components/CustomTextField.js","components/SubmitButton.js","App.js","reportWebVitals.js","index.js"],"names":["ParentBox","props","w","alignSelf","borderWidth","borderColor","borderRadius","bgColor","mt","pr","pl","children","HeaderText","fontSize","fontWeight","color","mb","headerText","CustomTextField","fieldHeader","bgcolor","backgroundColor","placeholder","SubmitButton","onPress","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAAe,I,eCER,SAASA,EAAUC,GAOtB,OACI,cAAC,YAAD,CACIC,EAPW,CACf,IACA,KAMIC,UAAU,SACVC,YAAa,EACbC,YAAY,UACZC,aAAa,KACbC,QAAQ,UACRC,GAAI,GAPR,SASI,cAAC,SAAD,CACIN,EAAE,OACFO,GAAI,GACJC,GAAI,GAHR,SAIKT,EAAMU,aCrBhB,SAASC,EAAWX,GACvB,OACQ,cAAC,OAAD,CACIY,SAAS,KACTC,WAAW,OACXC,MAAM,UACNP,GAAM,EACNQ,GAAM,GALV,SAMKf,EAAMgB,aCRhB,SAASC,EAAgBjB,GAC5B,OACI,eAAC,SAAD,CAAQC,EAAE,OACFc,GAAM,EADd,UAEI,cAAC,OAAD,CACIA,GAAM,EACNH,SAAS,KACTE,MAAM,QAHV,SAIKd,EAAMkB,cAEX,cAAC,YAAD,CACIjB,EAAE,OACFkB,QAAQ,QACRL,MAAM,QACNM,gBAAgB,QAChBC,YAAarB,EAAMqB,iBCf5B,SAASC,IACZ,OACI,cAAC,SAAD,CACIC,QAAW,kBAAMC,QAAQC,IAAI,gBAC7BX,MAAQ,UACRP,GAAM,EACNQ,GAAM,EAJV,oBCgCOW,MAjBf,WAEE,OACE,eAAC3B,EAAD,WACI,cAACY,EAAD,CAAYK,WAAW,yBACvB,cAACC,EAAD,CACEC,YAAY,QACZG,YAAY,qBAEd,cAACJ,EAAD,CACEC,YAAY,eACZG,YAAY,eACZ,cAACC,EAAD,QCnBKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDRQ,EAAQC,sBAAY,CACxBC,OAAQ,CACNC,iBAAkB,UAItBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,qBAAD,CAAoBN,MAAOA,EAA3B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.8d85aba0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ac84d59b.svg\";","import { Container, VStack } from 'native-base';\r\n\r\nexport function ParentBox(props) {\r\n\r\n    const breakpoint = [\r\n        480,\r\n        576,\r\n    ]\r\n\r\n    return (\r\n        <Container\r\n            w={breakpoint}\r\n            alignSelf='center'\r\n            borderWidth={2}\r\n            borderColor='#D3D3D3'\r\n            borderRadius='md'\r\n            bgColor='#F9F9F9'\r\n            mt={16}\r\n        >\r\n            <VStack\r\n                w=\"100%\"\r\n                pr={16}\r\n                pl={16}>\r\n                {props.children}\r\n            </VStack>\r\n        </Container>\r\n    )\r\n}","import { Box, Container, Heading, Text } from \"native-base\";\r\n\r\nexport function HeaderText(props) {\r\n    return (\r\n            <Text\r\n                fontSize='xl'\r\n                fontWeight='bold'\r\n                color='#11407B'\r\n                mt = {4}\r\n                mb = {16}>\r\n                {props.headerText}\r\n            </Text>\r\n\r\n    )\r\n}","import { Text, TextField, VStack } from \"native-base\";\r\n\r\nexport function CustomTextField(props) {\r\n    return (\r\n        <VStack w=\"100%\"\r\n                mb = {4}>\r\n            <Text\r\n                mb = {2}\r\n                fontSize='md'\r\n                color='black'>\r\n                {props.fieldHeader}\r\n            </Text>\r\n            <TextField\r\n                w=\"100%\"\r\n                bgcolor='white'\r\n                color='black'\r\n                backgroundColor='white'\r\n                placeholder={props.placeholder} />\r\n        </VStack>\r\n    )\r\n}","import { Button } from \"native-base\";\r\n\r\nexport function SubmitButton(){\r\n    return (\r\n        <Button\r\n            onPress = {() => console.log(\"hello world\")}\r\n            color = '#2178E4'\r\n            mt = {8}\r\n            mb = {8}\r\n            >\r\n                Submit\r\n            </Button>\r\n    )\r\n}","import logo from \"./logo.svg\";\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  HStack,\n  Heading,\n  Switch,\n  useColorMode,\n  VStack,\n  Code,\n  Flex,\n} from \"native-base\";\nimport { ParentBox } from \"./components/ParentBox\";\nimport { HeaderText } from \"./components/HeaderText\";\nimport { CustomTextField } from \"./components/CustomTextField\";\nimport { SubmitButton } from \"./components/SubmitButton\";\n\nfunction App() {\n\n  return (\n    <ParentBox>\n        <HeaderText headerText=\"Welcome to Surfline!\" />\n        <CustomTextField\n          fieldHeader=\"Email\"\n          placeholder=\"jondoe@gmail.com\" />\n\n        <CustomTextField\n          fieldHeader=\"Phone-number\"\n          placeholder=\"0555238492\" />\n          <SubmitButton/>\n    </ParentBox>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: \"dark\",\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <NativeBaseProvider theme={theme}>\n      <App />\n    </NativeBaseProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}